<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE experiments SYSTEM "behaviorspace.dtd">
<experiments>
  <experiment name="1-fish-population" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="false"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="initial-number-fish">
        <value value="50"/>
        <value value="100"/>
        <value value="200"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="2-dolphin-population" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="false"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="initial-number-dolphins">
        <value value="5"/>
        <value value="10"/>
        <value value="20"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="1-fish-population-reproduction" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="initial-number-fish">
        <value value="50"/>
        <value value="100"/>
        <value value="200"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="2-dolphin-population-reproduction" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="initial-number-dolphins">
        <value value="5"/>
        <value value="10"/>
        <value value="20"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="3-fish-speed" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="false"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="speed-fish">
        <value value="1"/>
        <value value="1.2"/>
        <value value="1.5"/>
        <value value="1.7"/>
        <value value="2"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="4-dolphin-speed" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="false"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="speed-dolphin">
        <value value="1"/>
        <value value="1.2"/>
        <value value="1.5"/>
        <value value="1.7"/>
        <value value="2"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="3-fish-speed-reproduction" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="speed-fish">
        <value value="1"/>
        <value value="1.2"/>
        <value value="1.5"/>
        <value value="1.7"/>
        <value value="2"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="4-dolphin-speed-reproduction" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="speed-dolphin">
        <value value="1"/>
        <value value="1.2"/>
        <value value="1.5"/>
        <value value="1.7"/>
        <value value="2"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="5-fish-vision" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="false"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="fish-vision-range">
        <value value="1"/>
        <value value="3"/>
        <value value="5"/>
        <value value="10"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="6-dolphin-vision" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="false"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="dolphin-vision-range">
        <value value="1"/>
        <value value="3"/>
        <value value="5"/>
        <value value="10"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="5-fish-vision-reproduction" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="fish-vision-range">
        <value value="1"/>
        <value value="3"/>
        <value value="5"/>
        <value value="10"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="6-dolphin-vision-reproduction" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="false"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-reproduction-rate">
      <value value="150"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="dolphin-vision-range">
        <value value="1"/>
        <value value="3"/>
        <value value="5"/>
        <value value="10"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
  <experiment name="7-fish-reproduction" repetitions="5" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <metric>sum [ fishes-eaten ] of dolphins / ticks</metric>
    <metric>sum [ fishes-eaten ] of dolphins</metric>
    <metric>mean [fishes-eaten] of dolphins</metric>
    <metric>count fishes</metric>
    <runMetricsCondition>(count fishes) = 0 or (count fishes + count dolphins) &gt;= max_turtles</runMetricsCondition>
    <enumeratedValueSet variable="fish-reproduction">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-dolphin">
      <value value="1.2"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="dolphin-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="fish-vision-range">
      <value value="3"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="speed-fish">
      <value value="1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-dolphins">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="initial-number-fish">
      <value value="100"/>
    </enumeratedValueSet>
    <subExperiment>
      <enumeratedValueSet variable="fish-reproduction-rate">
        <value value="25"/>
        <value value="50"/>
        <value value="100"/>
        <value value="150"/>
        <value value="300"/>
      </enumeratedValueSet>
    </subExperiment>
  </experiment>
</experiments>
